# Pre-commit hooks configuration
# See https://pre-commit.com for more information
repos:
  # Basic hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: detect-private-key

  # Code formatting (black)
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.13
        args: ['--line-length=100']

  # Linting (ruff)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: ['--fix', '--exit-non-zero-on-fix']

  # Import sorting (isort)
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=100']

  # Type checking (mypy) - OPTIONAL (commented out due to strict mode complexity)
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.8.0
  #   hooks:
  #     - id: mypy
  #       args: ['--ignore-missing-imports']
  #       additional_dependencies: ['types-all']

  # Security - detect secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: '.*\.ipynb$|.*\.lock$'

  # Security - bandit (AST-based security linter)
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml', '-ll']
        additional_dependencies: ['bandit[toml]']

  # Custom validators (Free Intelligence specific)
  - repo: local
    hooks:
      - id: fi-mutation-validator
        name: FI Mutation Validator
        entry: python -m backend.mutation_validator validate backend/
        language: system
        types: [python]
        pass_filenames: false

      - id: fi-llm-audit-validator
        name: FI LLM Audit Validator
        entry: python -m backend.llm_audit_policy validate backend/
        language: system
        types: [python]
        pass_filenames: false

      - id: fi-llm-router-validator
        name: FI LLM Router Validator
        entry: python -m backend.llm_router_policy validate backend/
        language: system
        types: [python]
        pass_filenames: false

  # Node.js/TypeScript hooks for AURITY
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: '^apps/aurity/.*\.[jt]sx?$'
        types: [file]
        args: ['--fix']
        additional_dependencies:
          - eslint@8.56.0
          - eslint-config-next@14.0.0
          - typescript@5.3.3

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: '^apps/aurity/.*\.(ts|tsx|js|jsx|json|md|yml|yaml)$'
        args: ['--write']
